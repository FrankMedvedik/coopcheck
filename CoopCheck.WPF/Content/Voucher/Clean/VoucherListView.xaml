<UserControl x:Class="CoopCheck.WPF.Content.Voucher.Clean.VoucherListView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:clean="clr-namespace:CoopCheck.WPF.Content.Voucher.Clean" mc:Ignorable="d">
    <Control.Resources>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Content" Value="" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Ellipse x:Name="outerEllipse" Height="12" Width="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="Red" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Margin="1" x:Name="highlightCircle" Height="10" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="Green" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Green" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="outerEllipse" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="LightGreen" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="DarkMagenta" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Pink" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True" ToolTip="{Binding ElementName=controlWithError,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            <TextBlock DockPanel.Dock="Right" Foreground="Red" Margin="1,1,1,1" FontWeight="Bold">
                                *
                            </TextBlock>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Control.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<mui:ModernProgressRing IsActive="true" Width="80" Height="80" Style="{StaticResource ChasingDotsProgressRingStyle}" Grid.Row="0" />
        <Grid Grid.Row="0" Visibility="Collapsed">-->
        <StackPanel Orientation="Vertical" Visibility="{Binding IsCleaning, Converter={StaticResource BoolToVisConverter}}" Grid.Row="0">
            <TextBlock Margin="5,5,5,5" VerticalAlignment="Center" FontWeight="Bold">Voucher Analysis in Progress</TextBlock>
            <mui:ModernProgressRing IsActive="{Binding IsCleaning}" Width="80" Height="80" Style="{StaticResource ChasingDotsProgressRingStyle}" />
        </StackPanel>
        <Grid Grid.Row="1" Visibility="{Binding IsCleaning, Converter={StaticResource NotBoolToVisConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Vertical">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <CheckBox Margin="6" x:Name="chkFilterRows" VerticalAlignment="Center" IsChecked="True" Checked="chkFilterRows_Checked" Unchecked="chkFilterRows_Unchecked" />
                    <TextBlock Margin="2,5,5,5" VerticalAlignment="Center" FontWeight="Bold">Show Only Errors?</TextBlock>
                    <Button Content="Revalidate Vouchers" Width="150" Height="30" Margin="6,6,50,6" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding CleanAndPostVouchersCommand}" IsEnabled="True" />
                    <Button Content="Add" Margin="6" Width="100" Click="AddVoucher_Click" />
                    <Button Margin="6" x:Name="btnDelete" Click="DeleteVoucher_Click" Width="100" IsEnabled="{Binding ShowSelectedVoucher}">
                        Delete
                    </Button>
                </StackPanel>
                <DataGrid AutoGenerateColumns="False" IsReadOnly="False" HorizontalAlignment="Left" Name="dgVouchers" 
                          VerticalAlignment="Top" Margin="6" ItemsSource="{Binding FilteredVoucherImports}" 
                          HorizontalScrollBarVisibility="Auto" MaxHeight="300" SelectedItem="{Binding SelectedVoucher, Mode=TwoWay}" 
                          SelectionChanged="dgVouchers_SelectionChanged" ClipboardCopyMode="IncludeHeader" 
                          EnableColumnVirtualization="True" EnableRowVirtualization="True" VerticalScrollBarVisibility="Auto" SelectionMode="Single">
                    <DataGrid.Columns>
                        <!--<mui:DataGridTextColumn Binding="{Binding DataCleanDate, Mode=OneWay}" Header="Cleaned" />
                    <mui:DataGridTextColumn Binding="{Binding ID, Mode=OneWay}" Header="ID" />
                    <mui:DataGridCheckBoxColumn Binding="{Binding HasBeenDataCleaned, Mode=OneWay}" Header="Clean" />-->
                        <mui:DataGridTextColumn Binding="{Binding Last, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" EditingElementStyle="{StaticResource CellEditStyle}" Header="Last" />
                        <mui:DataGridTextColumn Binding="{Binding First, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="First" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <DataGridCheckBoxColumn Binding="{Binding OkMailingAddress, Mode=OneTime}" Header="Mail" ElementStyle="{StaticResource CircleCheckbox}" />
                        <mui:DataGridTextColumn Binding="{Binding AddressLine1, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Address 1" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <mui:DataGridTextColumn Binding="{Binding AddressLine2, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Address 2" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <mui:DataGridTextColumn Binding="{Binding Municipality, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="City" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <mui:DataGridTextColumn Binding="{Binding Region, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="State" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <mui:DataGridTextColumn Binding="{Binding PostalCode, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Zip" />
                        <mui:DataGridTextColumn Binding="{Binding Amount, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Amount" EditingElementStyle="{StaticResource CellEditStyle}" ElementStyle="{StaticResource RightCell}" />
                        <DataGridCheckBoxColumn Binding="{Binding OkEmailAddress, Mode=OneTime}" Header="Email" ElementStyle="{StaticResource CircleCheckbox}" />
                        <mui:DataGridTextColumn Binding="{Binding EmailAddress, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Email" EditingElementStyle="{StaticResource CellEditStyle}" />
                        <DataGridCheckBoxColumn Binding="{Binding OkPhone, Mode=OneTime}" Header="Phone" ElementStyle="{StaticResource CircleCheckbox}" IsReadOnly="False" />
                        <mui:DataGridTextColumn Binding="{Binding PhoneNumber, ValidatesOnDataErrors=True,  ValidatesOnExceptions=True}" Header="Phone" EditingElementStyle="{StaticResource CellEditStyle}" />
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="1" Margin="6">
                <TabControl>
                    <TabItem Header="Details">
                        <clean:VoucherImportEditView x:Name="ve" />
                    </TabItem>
                    <TabItem Header="History">
                        <clean:PaymentHistoryView />
                    </TabItem>
                </TabControl>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>